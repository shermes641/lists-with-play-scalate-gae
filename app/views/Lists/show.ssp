<% attributes("title") = "Create a new list" %>
<% import scala.collection.JavaConversions._ %>
<%@ val list: List = new List %>
<%@ val list_id: String = list.id.toString %>
<%@ val items: java.util.Collection[Item] = new java.util.ArrayList[Item] %>
<%@ val oldItems: java.util.Collection[Item] = new java.util.ArrayList[Item] %>
<h1>
  <a id="back" href='${url("Lists.index")}'>My lists:</a> ${list} <span class="more">
  <a href='${url("Lists.edit", scala.List(list_id))}'">Edit</a>
#if (items.size() > 1)
   | <a id="sort" href="#">Reorder</a>
#end
   | <a href='${url("Lists.email", scala.List(list_id))}'>Email yourself a copy</a>
</span></h1>

<div id="items">
  <p>${list.notes}</p>
  <ul id="todo">
  #for(item <- items)
    <li rel='${item.id.toString}'>
      <input type="checkbox" class="checker" />
      ${item} <span class="do">- <a class="deleter" href="#">delete</a></span>
    </li>
  #end
  </ul>

  <form action='${url("Lists.addItems", scala.List(list_id))}'
        method="POST"
        accept-charset="utf-8"
        enctype="application/x-www-form-urlencoded" >

    <input type="text" name="label" size="30" />
      <p><input type="submit" value="+ Add this item"></p>    
  </form>

  <ul id="done">
    #for(item <- oldItems)
      <li rel='${item.id.toString}' ><input type="checkbox" checked="true" class="checker" />${item} <span class="do">- <a class="deleter" href="#">delete</a></span></li> 
    #end
  </ul>
</div>

<script type="text/javascript" charset="utf-8">
    // Events
    $(function() {
       $('.checker').change(function() {
           var done = $(this).parents('ul').is("#todo");
           var li = $(this).parent();
           $.post('${url("Lists.changeItemState", scala.List(list_id, "000000"))}'.replace('000000', li.attr('rel')), {done: done}, function() {
               if(done) {
                   $('#done').prepend(li);
                   $(li).effect('highlight')
               } else {
                   $('#todo').append(li);
                   $(li).effect('highlight')
               }
           });
       });
       $('.deleter').live('click', function(e) {
           var l = $(this);
           e.preventDefault();
           $.post('${url("Lists.deleteItem", scala.List(list_id, "000000"))}'.replace('000000', $(this).parent().parent().attr('rel')), function() {
              l.parent().parent('li').effect('drop');
           });
       });
       $('#sort').click(function(e) {
           e.preventDefault();  
           if($('#items').is('.sortable')) {
               $(this).html("Redorder").removeClass('strong');
               $('#items').toggleClass('sortable');
               $('#items form, #done, #todo input').show();
               $('#todo').sortable('destroy');
               // Post result
               var order = '';
               $('li[rel]').each(function() {                  
                   order += ','+$(this).attr('rel');
               });
               order = order.substring(1);
               $.post('${url("Lists.reorderItems", scala.List(list_id))}', {newOrder: order});
           } else {
               $(this).html("I'm done reordering").addClass('strong');
               $('#items').toggleClass('sortable');
               $('#items form, #done, #todo input').hide();
               $('#todo').sortable({axis: 'y'});
           }
       });
    });
    
</script>